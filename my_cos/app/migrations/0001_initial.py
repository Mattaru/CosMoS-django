# Generated by Django 3.1.7 on 2021-03-31 09:43

import app.validators
from django.db import migrations, models
import django.db.models.deletion
import multiselectfield.db.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, validators=[app.validators.unique_brand_name], verbose_name='Brand name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
            ],
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, validators=[app.validators.unique_country_name], verbose_name='Country name')),
                ('flag_img_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Flag image name')),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('line', models.CharField(blank=True, max_length=100, null=True, verbose_name='line')),
                ('name', models.CharField(max_length=200, unique=True, validators=[app.validators.unique_product_name], verbose_name='Product name')),
                ('img', models.ImageField(default='unknown.png', upload_to='product_img/', verbose_name='Image')),
                ('ingredients', models.TextField(verbose_name='Ingredients')),
                ('ingredients_img', models.ImageField(blank=True, null=True, upload_to='product_img/consistency/', verbose_name='Ingredients image')),
                ('ph', models.CharField(blank=True, choices=[('4', '4'), ('4.5', '4.5'), ('5', '5'), ('5.5', '5.5'), ('6', '6'), ('6.5', '6.5'), ('7', '7'), ('7.5', '7.5'), ('8', '8'), ('8.5', '8.5'), ('9', '9')], max_length=3, null=True, verbose_name='pH')),
                ('effect_type', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('calming', 'Calming'), ('anti wrinkle', 'Anti wrinkle'), ('skin elasticity', 'Skin elasticity'), ('moisturizing', 'Moisturizing'), ('skin microbiome', 'Skin microbiome'), ('sun protection', 'Sun protection'), ('lifting', 'Lifting'), ('healing', 'Healing'), ('antipigmentation', 'Antipigmentation')], max_length=113, null=True, verbose_name='Effect type')),
                ('skin_type', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('normal', 'Normal'), ('oily', 'Oily'), ('dry', 'Dry'), ('dehydrated', 'Dehydrated'), ('aging', 'Aging'), ('teenage', 'Teenage'), ('baby', 'Baby'), ('problem', 'Problem'), ('combination', 'Combination'), ('all', 'All')], max_length=69, null=True, verbose_name='Skin type')),
                ('for_what', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('face', 'Face'), ('eyes', 'Eyes'), ('neck', 'Neck'), ('body', 'Body'), ('hair', 'Hair')], max_length=24, null=True, verbose_name='For what')),
                ('ebay_link', models.CharField(blank=True, max_length=3000, null=True, verbose_name='Ebay(link)')),
                ('blog_link', models.CharField(blank=True, default='https://beauty-granny.com', max_length=3000, verbose_name='Blog(link)')),
                ('youtube_link', models.CharField(blank=True, max_length=3000, null=True, verbose_name='Youtube(link)')),
                ('approved', models.BooleanField(default=False)),
                ('brand', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='product_brand', to='app.brand', verbose_name='Brand')),
            ],
        ),
        migrations.AddField(
            model_name='brand',
            name='country',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='brand_country', to='app.country', verbose_name='Country'),
        ),
    ]
